
 -- Total Trips: Members vs Casual 
  -- Looking at overall, annual member and casual rider totals
SELECT 
        TotalTrips,
        TotalMemberTrips,
        TotalCasualTrips,
        ROUND(TotalMemberTrips/TotalTrips,2)*100 AS MemberPercentage,
        ROUND(TotalCasualTrips/TotalTrips,2)*100 AS CasualPercentage
FROM 
        (
        SELECT
                COUNT(ride_id) AS TotalTrips,
                COUNTIF(member_casual = 'member') AS TotalMemberTrips,
                COUNTIF(member_casual = 'casual') AS TotalCasualTrips
        FROM   `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2`
              
        )
 -- Avergage Ride Lengths: Members vs Casual  
 -- Looking at overall, member and casual average ride lengths

SELECT
        (
        SELECT 
                AVG(ride_length_interval)
        FROM 
               `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2`
        ) AS AvgRideLength_Overall,
        (
        SELECT 
                AVG(ride_length_interval) 
        FROM 
                `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2`
        WHERE 
                member_casual = 'member'
        ) AS AvgRideLength_Member,
        (
        SELECT 
                AVG(ride_length_interval) 
        FROM 
               `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2`
        WHERE 
                member_casual = 'casual'
        ) AS AvgRideLength_Casual

 -- Max Ride Lengths: Members vs Casual  
 -- Looking at max ride lengths to check for outliers


SELECT 
        member_casual,
        MAX(ride_length_interval) AS ride_length_MAX
FROM  `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2`
       
GROUP BY 
        member_casual
ORDER BY 
        ride_length_MAX DESC
LIMIT 
        2 


  -- Looking at top 100 longest trips for casual riders

SELECT 
        member_casual,
        ride_length
FROM `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2`
       
WHERE 
        member_casual = 'casual'
ORDER BY 
        ride_length DESC
LIMIT 
        100

 -- Looking at median ride lengths

SELECT
        DISTINCT median_ride_length,
        member_casual
FROM 
        (
        SELECT 
                ride_id,
                member_casual,
                ride_length,
                PERCENTILE_DISC(ride_length, 0.5 IGNORE NULLS) OVER(PARTITION BY member_casual) AS  median_ride_length
        FROM 
              `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2`  
        )
ORDER BY 
        median_ride_length DESC LIMIT 2



-- Looking at which days have the highest number of rides
 
SELECT
        member_casual, 
        day_of_week AS mode_day_of_week # Top number of day_of_week
FROM 
        (
        SELECT
                DISTINCT member_casual, day_of_week, ROW_NUMBER() OVER (PARTITION BY member_casual ORDER BY COUNT(day_of_week) DESC) rn
        FROM  `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2` 
                
        GROUP BY
                member_casual, day_of_week
        )
WHERE
        rn = 1
ORDER BY
        member_casual DESC LIMIT 2

 -- Looking at median ride lengths per day for annual members  

SELECT
        DISTINCT median_ride_length_interval,
        member_casual,
        day_of_week
FROM 
        (
        SELECT 
                ride_id,
                member_casual,
                day_of_week,
                ride_length_interval,
                PERCENTILE_DISC(ride_length, 0.5 IGNORE NULLS) OVER(PARTITION BY day_of_week) AS  median_ride_length_interval
        FROM `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2`
               
        WHERE
                member_casual = 'member'
        )
ORDER BY 
        median_ride_length_interval DESC LIMIT 7

 -- Looking at median ride lengths per day for annual casual  

SELECT
        DISTINCT median_ride_length_interval,
        member_casual,
        day_of_week
FROM 
        (
        SELECT 
                ride_id,
                member_casual,
                day_of_week,
                ride_length_interval,
                PERCENTILE_DISC(ride_length, 0.5 IGNORE NULLS) OVER(PARTITION BY day_of_week) AS  median_ride_length_interval
        FROM `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2`
               
        WHERE
                member_casual = 'casual'
        )
ORDER BY 
        median_ride_length_interval DESC LIMIT 7


  -- Looking at total number of trips per day 

SELECT  
        day_of_week,
        COUNT(DISTINCT ride_id) AS TotalTrips,
        SUM(CASE WHEN member_casual = 'member' THEN 1 ELSE 0 END) AS MemberTrips,
        SUM(CASE WHEN member_casual = 'casual' THEN 1 ELSE 0 END) AS CasualTrips
FROM `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2`
        
GROUP BY 
        1
ORDER BY 
        totaltrips DESC LIMIT 7


 -- Start stations: member vs casual
 -- Looking at start station counts

SELECT 
        DISTINCT start_station_name,
        SUM(
            CASE WHEN ride_id = ride_id AND start_station_name = start_station_name THEN 1 ELSE 0 END
            ) AS total,
        SUM(
            CASE WHEN member_casual = 'member' AND start_station_name = start_station_name THEN 1 ELSE 0 END
            ) AS member,
        SUM(
            CASE WHEN member_casual = 'casual' AND start_station_name = start_station_name THEN 1 ELSE 0 END
            ) AS casual
FROM  `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2`
       
GROUP BY 
        start_station_name
ORDER BY 
        total DESC

SELECT 
        DISTINCT start_station_name,
        SUM(
            CASE WHEN ride_id = ride_id AND start_station_name = start_station_name THEN 1 ELSE 0 END
            ) AS total,
        SUM(
            CASE WHEN member_casual = 'member' AND start_station_name = start_station_name THEN 1 ELSE 0 END
            ) AS member,
        SUM(
            CASE WHEN member_casual = 'casual' AND start_station_name = start_station_name THEN 1 ELSE 0 END
            ) AS casual
FROM  `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2`
       
GROUP BY 
        start_station_name
ORDER BY 
        casual DESC

SELECT 
        DISTINCT start_station_name,
        SUM(
            CASE WHEN ride_id = ride_id AND start_station_name = start_station_name THEN 1 ELSE 0 END
            ) AS total,
        SUM(
            CASE WHEN member_casual = 'member' AND start_station_name = start_station_name THEN 1 ELSE 0 END
            ) AS member,
        SUM(
            CASE WHEN member_casual = 'casual' AND start_station_name = start_station_name THEN 1 ELSE 0 END
            ) AS casual
FROM  `cyclistic-bikeshare-11.cyclistic_202201.trips_2022_Q2`
       
GROUP BY 
        start_station_name
ORDER BY 
        member DESC
